// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PAB.Entity;
using System;

namespace PAB.Entity.Migrations
{
    [DbContext(typeof(PABContext))]
    [Migration("20180329124117_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PAB.Entity.psPARContactAddress", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IContactNameId")
                        .HasColumnName("iContactNameId");

                    b.Property<string>("SzBusinessAddress")
                        .HasColumnName("szBusinessAddress")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("SzHomeAddress")
                        .HasColumnName("szHomeAddress")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("SzOther")
                        .HasColumnName("szOther")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.HasIndex("IContactNameId");

                    b.ToTable("psPARContactAddress");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactEmail", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IContactNameId")
                        .HasColumnName("iContactNameId");

                    b.Property<string>("SzEmailAddress1")
                        .HasColumnName("szEmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SzEmailAddress2")
                        .HasColumnName("szEmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.HasIndex("IContactNameId");

                    b.ToTable("psPARContactEmail");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactName", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("DCreatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dCreatedate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IUserId")
                        .HasColumnName("iUserId");

                    b.Property<string>("SzFirstName")
                        .IsRequired()
                        .HasColumnName("szFirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SzLastName")
                        .HasColumnName("szLastName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SzMiddleName")
                        .HasColumnName("szMiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SzNickName")
                        .HasColumnName("szNickName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SzSuffix")
                        .HasColumnName("szSuffix")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzTitle")
                        .HasColumnName("szTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.ToTable("psPARContactName");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactOther", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("DAnniversary")
                        .HasColumnName("dAnniversary")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DBirthday")
                        .HasColumnName("dBirthday")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IContactNameId")
                        .HasColumnName("iContactNameId");

                    b.Property<string>("SzPersonalWebPage")
                        .HasColumnName("szPersonalWebPage")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SzSignificantOther")
                        .HasColumnName("szSignificantOther")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.HasIndex("IContactNameId");

                    b.ToTable("psPARContactOther");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactPhone", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IContactNameId")
                        .HasColumnName("iContactNameId");

                    b.Property<string>("SzBusiness")
                        .HasColumnName("szBusiness")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzBusinessFax")
                        .HasColumnName("szBusinessFax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzHome")
                        .HasColumnName("szHome")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzHomeFax")
                        .HasColumnName("szHomeFax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzMobile1")
                        .HasColumnName("szMobile1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SzMobile2")
                        .HasColumnName("szMobile2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.HasIndex("IContactNameId");

                    b.ToTable("psPARContactPhone");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactWork", b =>
                {
                    b.Property<Guid>("pkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkId")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IContactNameId")
                        .HasColumnName("iContactNameId");

                    b.Property<string>("SzCompany")
                        .HasColumnName("szCompany")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("SzJobTitle")
                        .HasColumnName("szJobTitle")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("pkId");

                    b.HasIndex("IContactNameId");

                    b.ToTable("psPARContactWork");
                });

            modelBuilder.Entity("PAB.Entity.psPARContactAddress", b =>
                {
                    b.HasOne("PAB.Entity.psPARContactName", "ContactName")
                        .WithMany("ContactAddress")
                        .HasForeignKey("IContactNameId")
                        .HasConstraintName("FK_psPARContactAddress_psPARContactName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PAB.Entity.psPARContactEmail", b =>
                {
                    b.HasOne("PAB.Entity.psPARContactName", "ContactName")
                        .WithMany("ContactEmail")
                        .HasForeignKey("IContactNameId")
                        .HasConstraintName("FK_psPARContactEmail_psPARContactName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PAB.Entity.psPARContactOther", b =>
                {
                    b.HasOne("PAB.Entity.psPARContactName", "ContactName")
                        .WithMany("ContactOther")
                        .HasForeignKey("IContactNameId")
                        .HasConstraintName("FK_psPARContactOther_psPARContactName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PAB.Entity.psPARContactPhone", b =>
                {
                    b.HasOne("PAB.Entity.psPARContactName", "ContactName")
                        .WithMany("ContactPhone")
                        .HasForeignKey("IContactNameId")
                        .HasConstraintName("FK_psPARContactPhone_psPARContactName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PAB.Entity.psPARContactWork", b =>
                {
                    b.HasOne("PAB.Entity.psPARContactName", "ContactName")
                        .WithMany("ContactWork")
                        .HasForeignKey("IContactNameId")
                        .HasConstraintName("FK_psPARContactWork_psPARContactName")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
